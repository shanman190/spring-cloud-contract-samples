plugins {
	id 'groovy'
	id 'org.springframework.boot'
	id 'io.spring.dependency-management'
	id 'maven-publish'
	id 'com.google.protobuf'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
	mavenLocal()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
	maven { url "https://repo.spring.io/release" }
}

ext {
	set('springCloudVersion', "${BOM_VERSION}")
}

println "Boot Version [${bootVersion}], Cloud version [${BOM_VERSION}]"

dependencies {
	implementation("org.springframework.boot:spring-boot-starter-web")
	implementation("org.springframework.boot:spring-boot-starter-actuator")
	implementation 'net.devh:grpc-client-spring-boot-starter:2.10.1.RELEASE'

	//remove::start[]
	// tag::stubrunner[]
	testImplementation("org.springframework.cloud:spring-cloud-starter-contract-stub-runner")
	// end::stubrunner[]
	// remove::end[]

	// for compatibility
	testImplementation('org.junit.jupiter:junit-jupiter-engine')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

sourceSets {
	main {
		java {
			srcDirs 'build/generated/source/proto/main/grpc', 'build/generated/source/proto/main/java'
		}
	}
}

protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:3.12.0"
	}
	plugins {
		grpc {
			artifact = 'io.grpc:protoc-gen-grpc-java:1.32.1'
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {}
		}
	}
}

test {
	useJUnitPlatform()
	testLogging {
		exceptionFormat = 'full'
	}
	afterSuite { desc, result ->
		if (!desc.parent) {
			println "Results: (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
			boolean skipTests = Boolean.parseBoolean(project.findProperty('SKIP_TESTS') ?: "false")
			if (result.testCount == 0 && !skipTests) {
				throw new IllegalStateException("No tests were found. Failing the build")
			}
		}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact bootJar

			// https://github.com/spring-gradle-plugins/dependency-management-plugin/issues/273
			versionMapping {
				usage("java-api") {
					fromResolutionOf("runtimeClasspath")
				}
				usage("java-runtime") {
					fromResolutionResult()
				}
			}
		}
	}
}