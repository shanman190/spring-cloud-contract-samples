plugins {
	id 'groovy'
	id 'org.springframework.boot'
	id 'io.spring.dependency-management'
	//remove::start[]
	id 'org.springframework.cloud.contract'
	//remove::end[]
	id 'maven-publish'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
	mavenLocal()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
	maven { url "https://repo.spring.io/release" }
}

ext {
	set('springCloudVersion', "${BOM_VERSION}")
}

println "Boot Version [${bootVersion}], Cloud version [${BOM_VERSION}], Contract version [${verifierVersion}]"

dependencies {
	implementation("org.springframework.boot:spring-boot-starter-web")
	implementation("org.springframework.boot:spring-boot-starter-actuator")
	implementation("org.springframework.cloud:spring-cloud-starter-stream-rabbit")

	//remove::start[]
	contractTestImplementation(group: 'org.springframework.cloud', name: 'spring-cloud-stream', classifier: 'test-binder')
	contractTestImplementation('javax.inject:javax.inject:1')
	// tag::verifier_dep[]
	contractTestImplementation("org.springframework.cloud:spring-cloud-starter-contract-verifier")
	// end::verifier_dep[]

	// for compatibility
	contractTestImplementation('org.junit.jupiter:junit-jupiter-engine')
	// remove::end[]
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

//remove::start[]
contracts {
	testFramework = "JUNIT5"
	failOnInProgress = false
}

contractTest {
	useJUnitPlatform()
	testLogging {
		exceptionFormat = 'full'
	}
}
// remove::end[]

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact bootJar
			
			// remove::start[]
			artifact verifierStubsJar
			// remove::end[]

			// https://github.com/spring-gradle-plugins/dependency-management-plugin/issues/273
			versionMapping {
				usage("java-api") {
					fromResolutionOf("runtimeClasspath")
				}
				usage("java-runtime") {
					fromResolutionResult()
				}
			}
		}
	}
}